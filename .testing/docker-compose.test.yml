version: '3.8'

services:
  test-api:
    build:
      context: ..
      dockerfile: Dockerfile.api
    ports:
      - "8000:8000"
    environment:
      - TEST_ENV=true
      - LOG_LEVEL=DEBUG
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/health" ]
      interval: 10s
      timeout: 5s
      retries: 3

  test-runner:
    build:
      context: ..
      dockerfile: .testing/Dockerfile.test
    volumes:
      - ../:/app
      - ./reports:/app/reports
    environment:
      - TEST_ENV=true
      - API_BASE_URL=http://test-api:8000
      - VERIFICATION_LEVEL=medical_grade
    depends_on:
      test-api:
        condition: service_healthy

  test-db:
    image: postgres:14
    environment:
      - POSTGRES_USER=test_user
      - POSTGRES_PASSWORD=test_password
      - POSTGRES_DB=test_db
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U test_user -d test_db" ]
      interval: 10s
      timeout: 5s
      retries: 3

  test-redis:
    image: redis:7
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3

  test-monitoring:
    image: prom/prometheus:v2.45.0
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'

  test-grafana:
    image: grafana/grafana:10.0.0
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on:
      - test-monitoring

volumes:
  grafana-storage:
