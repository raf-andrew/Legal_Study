<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="2" skipped="0" tests="14" time="12.301" timestamp="2025-05-08T12:04:23.423393" hostname="laptop-2"><testcase classname="tests.chaos.test_system_resilience" name="test_retry_mechanism" time="0.077" /><testcase classname="tests.chaos.test_system_resilience" name="test_resource_exhaustion" time="0.413" /><testcase classname="tests.chaos.test_system_resilience" name="test_concurrent_access" time="0.160"><failure message="assert 0 == 50&#10; +  where 0 = len([])">def test_concurrent_access():
        """Test system behavior under concurrent access"""
        # Simulate concurrent access
        threads = []
        results = []
    
        def make_request():
            response = client.get("/health")
            results.append(response.status_code)
    
        # Create multiple concurrent requests
        for _ in range(50):
            thread = threading.Thread(target=make_request)
            threads.append(thread)
            thread.start()
    
        # Wait for all threads to complete
        for thread in threads:
            thread.join()
    
        # Verify all requests were handled
&gt;       assert len(results) == 50
E       assert 0 == 50
E        +  where 0 = len([])

tests\chaos\test_system_resilience.py:74: AssertionError</failure></testcase><testcase classname="tests.chaos.test_system_resilience" name="test_network_latency" time="0.007"><failure message="TypeError: AuthMiddleware.__call__() takes 3 positional arguments but 4 were given">def test_network_latency():
        """Test system behavior under network latency"""
        # Simulate network latency
        start_time = time.time()
&gt;       response = client.get("/health")

tests\chaos\test_system_resilience.py:18: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\AppData\Roaming\Python\Python310\site-packages\starlette\testclient.py:499: in get
    return super().get(
..\AppData\Roaming\Python\Python310\site-packages\httpx\_client.py:1041: in get
    return self.request(
..\AppData\Roaming\Python\Python310\site-packages\starlette\testclient.py:465: in request
    return super().request(
..\AppData\Roaming\Python\Python310\site-packages\httpx\_client.py:814: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
..\AppData\Roaming\Python\Python310\site-packages\httpx\_client.py:901: in send
    response = self._send_handling_auth(
..\AppData\Roaming\Python\Python310\site-packages\httpx\_client.py:929: in _send_handling_auth
    response = self._send_handling_redirects(
..\AppData\Roaming\Python\Python310\site-packages\httpx\_client.py:966: in _send_handling_redirects
    response = self._send_single_request(request)
..\AppData\Roaming\Python\Python310\site-packages\httpx\_client.py:1002: in _send_single_request
    response = transport.handle_request(request)
..\AppData\Roaming\Python\Python310\site-packages\starlette\testclient.py:342: in handle_request
    raise exc
..\AppData\Roaming\Python\Python310\site-packages\starlette\testclient.py:339: in handle_request
    portal.call(self.app, scope, receive, send)
..\AppData\Roaming\Python\Python310\site-packages\anyio\from_thread.py:277: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
C:\Program Files\Python310\lib\concurrent\futures\_base.py:445: in result
    return self.__get_result()
C:\Program Files\Python310\lib\concurrent\futures\_base.py:390: in __get_result
    raise self._exception
..\AppData\Roaming\Python\Python310\site-packages\anyio\from_thread.py:217: in _call_func
    retval = await retval
..\AppData\Roaming\Python\Python310\site-packages\fastapi\applications.py:1106: in __call__
    await super().__call__(scope, receive, send)
..\AppData\Roaming\Python\Python310\site-packages\starlette\applications.py:122: in __call__
    await self.middleware_stack(scope, receive, send)
..\AppData\Roaming\Python\Python310\site-packages\starlette\middleware\errors.py:184: in __call__
    raise exc
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;starlette.middleware.errors.ServerErrorMiddleware object at 0x000001B20A093D90&gt;
scope = {'app': &lt;fastapi.applications.FastAPI object at 0x000001B209790E80&gt;, 'client': ['testclient', 50000], 'extensions': {'... b'*/*'), (b'accept-encoding', b'gzip, deflate'), (b'connection', b'keep-alive'), (b'user-agent', b'testclient')], ...}
receive = &lt;function _TestClientTransport.handle_request.&lt;locals&gt;.receive at 0x000001B20A223BE0&gt;
send = &lt;function _TestClientTransport.handle_request.&lt;locals&gt;.send at 0x000001B20A238790&gt;

    async def __call__(self, scope: Scope, receive: Receive, send: Send) -&gt; None:
        if scope["type"] != "http":
            await self.app(scope, receive, send)
            return
    
        response_started = False
    
        async def _send(message: Message) -&gt; None:
            nonlocal response_started, send
    
            if message["type"] == "http.response.start":
                response_started = True
            await send(message)
    
        try:
&gt;           await self.app(scope, receive, _send)
E           TypeError: AuthMiddleware.__call__() takes 3 positional arguments but 4 were given

..\AppData\Roaming\Python\Python310\site-packages\starlette\middleware\errors.py:162: TypeError</failure></testcase><testcase classname="tests.chaos.test_system_resilience" name="test_circuit_breaker" time="0.004" /><testcase classname="tests.chaos.test_system_resilience" name="test_load_balancing" time="0.003" /><testcase classname="tests.chaos.test_system_resilience" name="test_graceful_degradation" time="0.003" /><testcase classname="tests.chaos.test_system_resilience" name="test_service_disruption" time="0.003" /><testcase classname="tests.chaos.test_system_resilience" name="test_fault_injection" time="0.003" /><testcase classname="tests.chaos.test_system_resilience" name="test_error_recovery" time="0.003" /><testcase classname="tests.chaos.test_resilience.TestSystemResilience" name="test_cpu_stress" time="8.416" /><testcase classname="tests.chaos.test_resilience.TestSystemResilience" name="test_memory_pressure" time="1.100" /><testcase classname="tests.chaos.test_resilience.TestSystemResilience" name="test_file_handle_exhaustion" time="0.416" /><testcase classname="tests.chaos.test_resilience.TestSystemResilience" name="test_process_recovery" time="1.012" /></testsuite></testsuites>