---
description:
globs:
alwaysApply: false
---
# Report Testing Infrastructure for .wireframe

This rule documents the comprehensive infrastructure and process for testing reports generated by the wireframe refinement system. All resources and tests are contained within the `.wireframe` directory.

## Overview
- The report testing system ensures that all generated reports and their UI/UX interactions are fully functional and meet developer and user requirements.
- The process is iterative, running through 10 cycles of testing, issue resolution, and deployment adjustments.

## Key Components
- **Test Suite:** The main test suite is implemented in [test_report_suite.py](mdc:.wireframe/testing/test_report_suite.py).
- **Test Runner:** Iterative test execution and reporting is managed by [run_report_tests.py](mdc:.wireframe/testing/run_report_tests.py).
- **Configuration:** Test settings are defined in [config.json](mdc:.wireframe/testing/config.json).
- **Requirements:** All dependencies are listed in [requirements.txt](mdc:.wireframe/testing/requirements.txt).
- **Setup Script:** Environment setup is handled by [setup.py](mdc:.wireframe/testing/setup.py).
- **Checklist:** Testing is guided by a comprehensive checklist in [test_checklist.md](mdc:.wireframe/testing/test_checklist.md).

## Testing Process
1. **Setup:**
   - Install dependencies and browsers using the setup script.
   - Ensure all directories for results, screenshots, and logs exist.
2. **Test Data Generation:**
   - Generate or use existing reports for testing.
3. **Test Execution:**
   - Run the test suite using the test runner for 10 iterations.
   - Each iteration generates detailed HTML and JSON reports.
4. **Validation:**
   - Validate report structure, UI/UX, responsiveness, accessibility, and performance.
   - Interactions (e.g., option selection) are tested for seamless developer experience.
5. **Issue Resolution:**
   - Issues found in any iteration are logged, resolved, and the system is re-tested.
6. **Reporting:**
   - Iteration and final reports are generated and opened in the browser for review.

## Best Practices
- Keep all test resources and results within the `.wireframe` directory.
- Use the checklist to ensure all aspects of report generation and UI/UX are covered.
- After each iteration, review the generated reports and logs for issues.
- Update the configuration and requirements as needed to support new features or resolve issues.
- Maintain a clean and reproducible test environment using the setup script.

## References
- [test_report_suite.py](mdc:.wireframe/testing/test_report_suite.py)
- [run_report_tests.py](mdc:.wireframe/testing/run_report_tests.py)
- [config.json](mdc:.wireframe/testing/config.json)
- [requirements.txt](mdc:.wireframe/testing/requirements.txt)
- [setup.py](mdc:.wireframe/testing/setup.py)
- [test_checklist.md](mdc:.wireframe/testing/test_checklist.md)
