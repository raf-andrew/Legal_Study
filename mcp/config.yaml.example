# MCP configuration example
# Copy this file to config.yaml and adjust settings as needed

# Global settings
global:
  workspace_path: "./workspace"
  job_path: "./jobs"
  isolation_path: "./isolations"
  analysis_path: "./analysis"
  fix_path: "./fixes"
  report_path: "./reports"
  parallel_jobs: 4
  cache_ttl: 3600

# Domain settings
domains:
  security:
    enabled: true
    sniffer:
      patterns_path: "./patterns/security"
      rules_path: "./rules/security"
      simulations_path: "./simulations/security"
    analyzer:
      model_name: "microsoft/codebert-base"
      confidence_threshold: 0.8
      max_sequence_length: 512
      batch_size: 32
    fixer:
      model_name: "microsoft/codebert-base"
      confidence_threshold: 0.9
      max_sequence_length: 512
      batch_size: 32
    reporter:
      templates_path: "./templates/security"
      formats:
        - "html"
        - "pdf"
        - "csv"

  browser:
    enabled: true
    sniffer:
      patterns_path: "./patterns/browser"
      rules_path: "./rules/browser"
      simulations_path: "./simulations/browser"
    analyzer:
      model_name: "microsoft/codebert-base"
      confidence_threshold: 0.8
      max_sequence_length: 512
      batch_size: 32
    fixer:
      model_name: "microsoft/codebert-base"
      confidence_threshold: 0.9
      max_sequence_length: 512
      batch_size: 32
    reporter:
      templates_path: "./templates/browser"
      formats:
        - "html"
        - "pdf"
        - "csv"

  functional:
    enabled: true
    sniffer:
      patterns_path: "./patterns/functional"
      rules_path: "./rules/functional"
      simulations_path: "./simulations/functional"
    analyzer:
      model_name: "microsoft/codebert-base"
      confidence_threshold: 0.8
      max_sequence_length: 512
      batch_size: 32
    fixer:
      model_name: "microsoft/codebert-base"
      confidence_threshold: 0.9
      max_sequence_length: 512
      batch_size: 32
    reporter:
      templates_path: "./templates/functional"
      formats:
        - "html"
        - "pdf"
        - "csv"

  unit:
    enabled: true
    sniffer:
      patterns_path: "./patterns/unit"
      rules_path: "./rules/unit"
      simulations_path: "./simulations/unit"
    analyzer:
      model_name: "microsoft/codebert-base"
      confidence_threshold: 0.8
      max_sequence_length: 512
      batch_size: 32
    fixer:
      model_name: "microsoft/codebert-base"
      confidence_threshold: 0.9
      max_sequence_length: 512
      batch_size: 32
    reporter:
      templates_path: "./templates/unit"
      formats:
        - "html"
        - "pdf"
        - "csv"

  documentation:
    enabled: true
    sniffer:
      patterns_path: "./patterns/documentation"
      rules_path: "./rules/documentation"
      simulations_path: "./simulations/documentation"
    analyzer:
      model_name: "microsoft/codebert-base"
      confidence_threshold: 0.8
      max_sequence_length: 512
      batch_size: 32
    fixer:
      model_name: "microsoft/codebert-base"
      confidence_threshold: 0.9
      max_sequence_length: 512
      batch_size: 32
    reporter:
      templates_path: "./templates/documentation"
      formats:
        - "html"
        - "pdf"
        - "csv"

# Monitoring settings
monitoring:
  enabled: true
  collection_interval: 60
  metrics_path: "./metrics"
  health_check_interval: 300

# Logging settings
logging:
  level: "INFO"
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  file: "./logs/{name}.log"

# Model settings
model:
  name: "microsoft/codebert-base"
  confidence_threshold: 0.8
  max_sequence_length: 512
  batch_size: 32

# Git integration settings
git:
  enabled: true
  pre_commit_hook: true
  branch_protection: true
  required_checks:
    - "security-scan"
    - "browser-scan"
    - "functional-scan"
    - "unit-scan"
    - "documentation-scan"

# CI/CD integration settings
ci_cd:
  enabled: true
  block_on_critical: true
  block_on_high: false
  notification_threshold: "medium"
  slack_webhook: ""
  email_notifications: []

# API settings
api:
  enabled: true
  host: "localhost"
  port: 8000
  rate_limit: 100
  token_expiry: 3600

# Cache settings
cache:
  enabled: true
  backend: "redis"
  url: "redis://localhost:6379/0"
  ttl: 3600

# Performance settings
performance:
  max_file_size: 1048576
  timeout: 300
  memory_limit: 1024
  cpu_limit: 2

# Security settings
security:
  enabled: true
  scan_secrets: true
  scan_dependencies: true
  scan_containers: true
  block_critical: true
  block_high: false
  notification_threshold: "medium"

# Documentation settings
documentation:
  enabled: true
  output_path: "./docs"
  formats:
    - "html"
    - "pdf"
    - "markdown"
  auto_generate: true

# Testing settings
testing:
  enabled: true
  parallel_tests: 4
  retry_count: 3
  timeout: 300
  coverage_threshold: 80
  quality_threshold: 80

# Deployment settings
deployment:
  enabled: true
  strategy: "rolling"
  replicas: 3
  health_check:
    path: "/health"
    port: 8000
    initial_delay: 30
    period: 10
    timeout: 5
    success_threshold: 1
    failure_threshold: 3

# Resource settings
resources:
  requests:
    cpu: "100m"
    memory: "128Mi"
  limits:
    cpu: "500m"
    memory: "512Mi"

# Scaling settings
scaling:
  enabled: true
  min_replicas: 1
  max_replicas: 10
  target_cpu: 80
  target_memory: 80

# Backup settings
backup:
  enabled: true
  schedule: "0 0 * * *"
  retention: 7
  storage:
    type: "s3"
    bucket: "backups"
    path: "mcp"

# Recovery settings
recovery:
  enabled: true
  auto_recover: true
  max_attempts: 3
  backoff: 30

# Notification settings
notifications:
  enabled: true
  channels:
    slack:
      enabled: true
      webhook: ""
      channel: "#mcp"
    email:
      enabled: true
      smtp_host: ""
      smtp_port: 587
      smtp_user: ""
      smtp_pass: ""
      from_address: ""
      to_addresses: []

# Integration settings
integrations:
  jira:
    enabled: false
    url: ""
    token: ""
    project: ""
  github:
    enabled: false
    token: ""
    repository: ""
  gitlab:
    enabled: false
    token: ""
    repository: ""
